Version 1.6.0
-------------

* Rename instance_factory to worker_factory
* Raise IncorrectSignature as exception instead of “RemoteError: TypeError”
  if an RPC method is called with invalid arguments
* Raise MethodNotFound as exception instead of “RemoteError: MethodNotFound”
* Let log handlers format warning messages so that aggregators group them
  correctly.
* Expose the entire dependency provider (rather than just the method name) to
  the worker context.

Version 1.5.0
-------------

* Improvements to kill() enabling better tracebacks and cleaner teardown.
  - Using sys.exc_info to preserve tracebacks
  - No longer passing exc into DependencyProvider.kill(), removing race
    conditions.
  - No longer requiring exc in ServiceContainer.kill()

Version 1.4.1
-------------

* Adds the `nameko_doc` package, for easing the creation of service-oriented
  documentation.


Version 1.4.0
-------------

* RPC calls to non-existent services (no queues bound to the RPC exchange with
  the appropriate routing key) now raise an exception instead of hanging
  indefinitely. Note that calls to existing but non-running services (where the
  queue exists but has no consumer) behave as before.

>>>>>>> origin/master

Version 1.3.5
-------------

* Increased test resilience. Force-closing existing connections on rabbit
  reset


Version 1.3.4
-------------

* Use MagicMock for injection replacement in test utilities
* Use autospec=True wherever possible when mocking
* Merge ServiceContainers into a single class


Version 1.3.3
-------------

* Bugfixes enabling reconnection to the broker if the connection is temporarily
  lost.


Version 1.3.2
-------------

* Dropping headers with a `None` value because they can't be serialised by amqp


Version 1.3.1
-------------

* Add `event_handler_cls` kwarg to the `event_handler` entrypoint, for using
  a custom subclass of the EventHandler provider


Version 1.3.0
-------------

* Standalone RPC proxy interface changed to class with contextmanager interface
  and manual start() and stop() methods.
